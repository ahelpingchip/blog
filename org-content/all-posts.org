#+hugo_base_dir: ../
#+hugo_auto_set_lastmod: t

#+seq_todo: TODO DRAFT DONE

#+property: header-args :eval never-export

#+author: Levi Tan Ong

* DRAFT Expense Logging with Ledger Mode and Airtable
:PROPERTIES:
:EXPORT_FILE_NAME: expense-logging-with-ledger-mode-and-airtable
:EXPORT_DATE: 2019-3-31
:END:
** Summary

Many companies and organizations subsidize certain things like gas, transit,
food, and lodging for their employees. While one might consider personal and
company expenses two separate things, it is useful sometimes to keep duplicate
records because we don't want to assume those benefits are there forever. We are
left with the rather unenviable task of entering transactional data in both
personal bookkeeping and whatever online system your company prescribes. In my
case, I use ledger-mode for personal accounting and airtable for my company.
This article details my efforts at minimizing duplicated effort using emacs's
scripting features to parse Ledger data and POST the appropriate information to
airtable.
TESTING

** Ledger Data

If you're like me, you use ledger to keep track of your finances. You've tried
all sorts of expense tracking apps like toshl, pennies, mint, and even excel.
None of them stuck, you realize, because none of them were emacs. Some time ago,
you stumbled onto an article on reddit about [[https://plaintextaccounting.org/][Plaintext Accounting]] and you were
sold, because [[https://www.ledger-cli.org/][Ledger]] is emacs.

For a while, you're satisfied because your finances are now in emacs along with
the rest of your life. Until one day, as you enter that gas expenditure into
your ledger journal...

#+BEGIN_SRC ledger
2019/03/29 Richard Stallman's Gas Station
    expenses:transport:fuel                  2000 PHP
    expenses:food                             200 PHP ;; What? I was hungry.
    liabilities:credit                      -2200 PHP ;; Actually not necessary. If left blank, it will calculate the diff.
#+END_SRC

...you realize your company subsidizes transportation costs and you can enter it
into the company [[https://airtable.com][Airtable]] [fn:airtable] for expense logging. You brace yourself
for the sin you're about to commit, [fn:sin] and duplicate your work into
airtable.

As penance, you look for a better way, and find this post.

** Exploration
Let's take a look at the Airtable API.

Let's /mise en place/. [fn:miseenplace]

#+BEGIN_SRC emacs-lisp
(use-package request :ensure t)
(use-package ledger-mode :ensure t)
#+END_SRC

#+BEGIN_SRC restclient
GET https://example.com
#+END_SRC

#+RESULTS:
#+BEGIN_SRC html
<!doctype html>
<html>
<head>
    <title>Example Domain</title>

    <meta charset="utf-8" />
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type="text/css">
    body {
        background-color: #f0f0f2;
        margin: 0;
        padding: 0;
        font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;

    }
    div {
        width: 600px;
        margin: 5em auto;
        padding: 50px;
        background-color: #fff;
        border-radius: 1em;
    }
    a:link, a:visited {
        color: #38488f;
        text-decoration: none;
    }
    @media (max-width: 700px) {
        body {
            background-color: #fff;
        }
        div {
            width: auto;
            margin: 0 auto;
            border-radius: 0;
            padding: 1em;
        }
    }
    </style>
</head>

<body>
<div>
    <h1>Example Domain</h1>
    <p>This domain is established to be used for illustrative examples in documents. You may use this
    domain in examples without prior coordination or asking for permission.</p>
    <p><a href="http://www.iana.org/domains/example">More information...</a></p>
</div>
</body>
</html>

<!-- GET https://example.com -->
<!-- HTTP/1.1 200 OK -->
<!-- Accept-Ranges: bytes -->
<!-- Cache-Control: max-age=604800 -->
<!-- Content-Type: text/html; charset=UTF-8 -->
<!-- Date: Sat, 30 Mar 2019 17:36:59 GMT -->
<!-- Etag: "1541025663+gzip" -->
<!-- Expires: Sat, 06 Apr 2019 17:36:59 GMT -->
<!-- Last-Modified: Fri, 09 Aug 2013 23:54:35 GMT -->
<!-- Server: ECS (sjc/4E44) -->
<!-- Vary: Accept-Encoding -->
<!-- X-Cache: HIT -->
<!-- Content-Length: 1270 -->
<!-- Request duration: 0.623226s -->
#+END_SRC


# * Footnotes
[fn:airtable] Think of it as a reasonably flexible and easy-to-use database with
strong support for collaboration. It's also got some nice usability featuresâ€”it
can even generate a beautiful form for data input so you don't have to fill a
row in a table. I have even attempted to manage my information on Dungeons &
Dragons on this. I eventually gave up, but that's more due to my lack of
time than Airtable's lack of power.

[fn:sin] Repeating myself.

[fn:miseenplace] The french cooking term for placing everything you need set
up in front of you, so you don't have to burn that omelette while looking for
that parsley.

* TODO Github READMEs in Org Mode
:PROPERTIES:
:EXPORT_FILE_NAME: github-readmes-in-org-mode
:EXPORT_DATE: 2019-3-31
:END:
** clojars image links
https://github.com/wallyqs/org-ruby/issues/42
** code block evaluation
*** results being funky
https://orgmode.org/manual/results.html
*** multiline headers for readability
https://orgmode.org/manual/Using-Header-Arguments.html
*** results not showing on github
https://github.com/wallyqs/org-ruby/issues/62
* TODO Fish et al
:PROPERTIES:
:EXPORT_FILE_NAME: fish-et-al
:EXPORT_DATE: 2019-3-31
:END:
** clojars and credentials
** git crypt

* Footnotes
* COMMENT Local Variables                          :ARCHIVE:
# Local Variables:
# eval: (org-hugo-auto-export-mode)
# End:
